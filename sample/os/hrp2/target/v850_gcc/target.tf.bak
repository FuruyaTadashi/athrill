$ 
$     パス2のターゲット依存テンプレート（NUCLEO_F401RE用）
$ 

$ 
$  kernel/kernel.tf のターゲット依存部
$ 

$ 
$  標準のセクションのメモリオブジェクト属性の定義
$ 
$MEMATR_TEXT = (TA_NOWRITE|TA_EXEC)$
$MEMATR_RODATA = (TA_NOWRITE|TA_EXEC)$
$MEMATR_DATA = TA_MEMINI$
$MEMATR_BSS = TA_NULL$
$MEMATR_PRSV = TA_MEMPRSV$

$TARGET_MEMATR_USTACK = TA_NULL$

$ 
$  標準のセクションに関する定義
$  DSEC.ORDER_LIST：IDのリスト
$  DESC.MEMREG：セクションを配置するメモリリージョン
$               1 : 標準ROMリージョン
$               2 : 標準RAMリージョン
$  DESC.SECTION：セクション名
$  DESC.MEMATR：セクションのメモリオブジェクト属性
$ 
$DSEC.ORDER_LIST = RANGE(0,3)$
$DSEC.MEMREG[0] = 1$
$DSEC.SECTION[0] = ".text"$
$DSEC.MEMATR[0] = MEMATR_TEXT$

$DSEC.MEMREG[1] = 1$
$DSEC.SECTION[1] = ".rodata"$
$DSEC.MEMATR[1] = MEMATR_RODATA$

$DSEC.MEMREG[2] = 2$
$DSEC.SECTION[2] = ".data"$
$DSEC.MEMATR[2] = MEMATR_DATA$

$DSEC.MEMREG[3] = 2$
$DSEC.SECTION[3] = ".bss"$
$DSEC.MEMATR[3] = MEMATR_BSS$

$ 
$  arch/gcc/ldscript.tfのターゲット依存部
$ 
$FUNCTION GENERATE_MEMORY$
    $NOOP()$
$END$

$FUNCTION GENERATE_OUTPUT$
    OUTPUT_FORMAT("elf32-v850-rh850","elf32-v850-rh850","elf32-v850-rh850")$NL$
    OUTPUT_ARCH(v850-rh850)$NL$
    STARTUP(start.o)$NL$
    $NL$
$END$

$ 
$  カーネルが管理しないセクションを出力する
$  ターゲット依存で必要なセクション
$ 
$FUNCTION GENERATE_SECTION_FIRST$
    $TAB$.vector_start : {$NL$
    $TAB$$TAB$__vector_start = .;$NL$
    $TAB$$TAB$*(.vector)$NL$
    $TAB$$TAB$__vector_end = .;$NL$
    $TAB$$TAB$start.o(.text_kernel)$NL$
    $TAB$$TAB$start.o(*.text*)$NL$
    $TAB$} > $REG.REGNAME[STANDARD_ROM]$$NL$
    $NL$
    $TAB$.vector_entry : {$NL$
    $TAB$$TAB$__vector_entry_start = .;$NL$
    $TAB$$TAB$*(.vector_entry)$NL$
    $TAB$$TAB$__vector_entry_end = .;$NL$
    $TAB$}  > $REG.REGNAME[STANDARD_ROM]$$NL$
    $NL$
    $TAB$.bss : {$NL$
    $TAB$} > $REG.REGNAME[STANDARD_RAM]$$NL$
    $NL$
$END$

$ 
$  ページサイズとアラインメントの制約
$ 
$TARGET_PAGE_SIZE_STR = 1024$
$TARGET_SEC_ALIGN_STR = 1024$

$
$  リンカのためのセクション記述の生成
$
$FUNCTION SECTION_DESCRIPTION$
	$IF EQ(ARGV[1], ".rodata")$
		$RESULT = "*.rodata *.rodata.* .rodata.str1.4"$
	$ELIF EQ(ARGV[1], ".bss")$
		$RESULT = "*.bss *.bss.* COMMON"$
	$ELIF EQ(ARGV[1], ".text")$
		$RESULT = "*.text *.text.* .glue_7t .glue_7"$
	$ELIF EQ(ARGV[1], ".data")$
		$RESULT = "*.data *.data.*"$
	$ELSE$
		$RESULT = ARGV[1]$
	$END$
$END$

$END_LABEL_HOOK_LABELS = { "rodata_shared", "rodata_shared__std" }$

$FUNCTION END_LABEL_HOOK$
	$TAB$.preinit_array ALIGN(4) : {$NL$
	$TAB$$TAB$PROVIDE_HIDDEN (__preinit_array_start = .);$NL$
	$TAB$$TAB$KEEP (*(.preinit_array))$NL$
	$TAB$$TAB$PROVIDE_HIDDEN (__preinit_array_end = .);$NL$
	$TAB$} > $REG.REGNAME[STANDARD_ROM]$$NL$

	$TAB$.init_array ALIGN(4) : {$NL$
	$TAB$$TAB$PROVIDE_HIDDEN (__init_array_start = .);$NL$
	$TAB$$TAB$KEEP (*(SORT(.init_array.*)))$NL$
	$TAB$$TAB$KEEP (*(.init_array))$NL$
	$TAB$$TAB$PROVIDE_HIDDEN (__init_array_end = .);$NL$
	$TAB$} > $REG.REGNAME[STANDARD_ROM]$$NL$

	$TAB$.fini_array ALIGN(4) : {$NL$
	$TAB$$TAB$PROVIDE_HIDDEN (__fini_array_start = .);$NL$
	$TAB$$TAB$KEEP (*(SORT(.fini_array.*)))$NL$
	$TAB$$TAB$KEEP (*(.fini_array))$NL$
	$TAB$$TAB$PROVIDE_HIDDEN (__fini_array_end = .);$NL$
	$TAB$} > $REG.REGNAME[STANDARD_ROM]$$NL$

	$TAB$.ARM.exidx ALIGN(4) : {$NL$
	$TAB$$TAB$__exidx_start = .;$NL$
	$TAB$$TAB$*(.ARM.exidx* .gnu.linkonce.armexidx.*)$NL$
	$TAB$$TAB$__exidx_end = .;$NL$
	$TAB$} > $REG.REGNAME[STANDARD_ROM]$$NL$

	$TAB$__end_rodata_shared__std = .;$NL$
	$TAB$__end_rodata_shared = .;$NL$
$END$

$ 
$  チップ依存のテンプレートファイルのインクルード
$ 
$INCLUDE"v850_gcc/chip.tf"$
