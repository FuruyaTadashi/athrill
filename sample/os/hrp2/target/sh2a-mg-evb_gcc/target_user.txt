=====================================================================
                         SH2A-MG-EVB（GCC）ターゲット依存部
                                  Last Modified: 2012 May 17 11:58:36
=====================================================================

○概要

SH2A-MG-EVB（GCC）ターゲット依存部は，プロセッサにSH2A（SH72AW）を搭載した，
ルネサスエレクトロニクス社製のSH2A-MG-EVB02をサポートしている．

○カーネルの使用リソース

カーネルは以下のリソースを使用する．

  ・ROM
     ROM化の場合にコードを配置する．
     使用量は使用するAPIの数に依存する．

  ・RAM
     JTAGデバッグ時はコードとデータを，ROM化の場合はデータを配置する．
     使用量はオブジェクト数に依存する．
  
  ・CMT0
     カーネル内部のティックの生成に用いる．
     
  ・SCI0チャネル
     コンソールの出力に使用．

  ・INTC
     割込みを管理するために使用．

  ・MPU
     メモリ保護機能のために用いる．

  ・CMT1
     オーバランタイマとして用いる．
     

○他のターゲットへの移植

SH2A-MG-EVBターゲット依存部で使用するタイマやシリアルは，SH72AWの内蔵
機能のみを使用するため，SH72AWや近い構成のSH2Aを用いた環境には容易に
ポーティングが可能である．ポーティングに関しては，以下の初期化ルーチンに
ターゲット毎の初期化を追加すればよい．

  ・target_initialize() : target_config.c
    ターゲット依存部の初期化（C言語）
  ・_hardware_init_hook : target_support.S
    低レベルのターゲット依存の初期化
    スタートアップモジュールの中で，メモリの初期化の前に呼び出される


○デバッグ環境

デバッグ環境としては，JTAGデバッガの使用を前提とする．動作確認したデバ
ッガは，ルネサスエレクトロニクス社製の E10A である．
デバッグのソフトウェアには，HEWを使用した．

●留意事項

GCCでビルドした実行ファイルをHEWでロードした場合，LMAではなく，VMAに
ロードされる．
そのため，あるセクションのVMAとLMAを別の領域にした場合，正常に処理されない．
実行ファイルではなく，Sレコードファイルをロードすれば，すべてLMAにロード
されるため，この問題は発生しない．
また，VMAとLMAが別の領域のセクションについて，セクションを複製する方法も
可能である．

○コンパイラ

GCC 4.3.2 で動作確認を行った．動作確認した GCC は，以下のサイトからバ
イナリパッケージをダウンロードして用いた．

   http://www.superh-tkernel.org/jpn/download/tools/index.html

また，GCC 4.6.1 でも動作確認を行った．GNUの公式サイトから，以下の
ツールチェーンパッケージをダウンロードし，ホストPCでビルドして使用した．
・binutils-2.21.1
・gcc-4.6.1
・newlib-1.19.0
ツールチェーンビルド時のオプションとして，
--target=sh-elf --program-prefix=sh-elf-
を指定した．

○コンソール出力

コンソール出力には，SCIFを用いる．AP-SH4-1A 上ではSCIFのチャネルは，
CN4に接続されている．通信フォーマットは以下の通りである．

  ・38400bps, Data 8bit, Parity none, Stop 1bit, Flow control none

○各種設定の変更

幾つかのパラメータは変更可能になっている．設定ファイル毎に設定可能項目
は次のようになっている．

●Makefile.target の設定項目

・ROM_BOOT
  ROM化する場合はtrueに定義する

・GCC_TARGET
  GCCの suffix を定義

・INCLUDES
  インクルード指定

・COPTS
  Cコンパイラへのオプション

・LDFLAGS
  リンカへのオプション

・COPY_IDATA_SECTION
  dataセクションをidataセクションの値で初期化する場合はtrueに定義する

●target_config.h の設定項目

・DEFAULT_ISTKSZ
  ディフォルトの非タスクコンテキスト用のスタックサイズ

・SIL_DLY_TIM1/2
  微少時間待ちのための定義

・DEFAULT_SSTKSZ
  デフォルトのシステムスタックサイズ

◯オーバランタイマに設定できる最大時間

オーバランタイマのカウントソースとなるクロック周波数は，
160/512 MHzである．
そして，オーバランタイマのカウンタレジスタは，16ビット
である．
よって，オーバランタイマに設定できる最大時間は，
( 2^16 - 1 ) / ( 160/512 MHz * 1 μ秒 )
= 209712 μ秒であり，約200ミリ秒である．

◯メモリ保護機能について

☆サポートするメモリリージョン

・ROM（TA_STDROM）
・RAM（TA_STDRAM）

☆サポートする標準のセクション

・.text
  ROMに配置され，属する保護ドメインからの読込みと実行が可能
・.rodata
  ROMに配置され，属する保護ドメインからの読込みと実行が可能
・.data
  RAMに配置され，属する保護ドメインからの読込みと書込みと実行が可能
・.bss
  RAMに配置され，属する保護ドメインからの読込みと書込みと実行が可能

☆メモリオブジェクト属性

SH72AWのMPUでは，各領域に対して，読出しと書込みと実行を許可するかどうか
を個別に設定可能である．

ここで，SH72AWでサポートするMPUの領域数は，16であり，そのうち，9領域を
保護ドメインに属するリンカ指定のメモリオブジェクトとユーザスタック領域
のために使用し，3領域をカーネルが内部的に使用する．

そこで，本ターゲットでサポートするメモリオブジェクトに対するアクセス権は，
以下の7通りとする．
・属する保護ドメインから読出しが可能
・属する保護ドメインから読出しと実行が可能
・属する保護ドメインから読出しと書込みと実行が可能
・すべての保護ドメインから読出しが可能
・すべての保護ドメインから読出しと実行が可能
・すべての保護ドメインから読出しと書込みと実行が可能
・すべての保護ドメインから読出しと実行が可能で，属する保護ドメインから
  読出しと書込みと実行が可能

よって，本ターゲットでは，以下のようにメモリオブジェクト属性を扱う．
・TA_NOWRITEが指定された場合，書込みアクセスを禁止する．
・TA_NOREADの指定は無視する．
・TA_EXECが指定された場合は実行アクセスを許可する．
・TA_NOWRITEが指定されなかった場合，読出しと書込みと実行アクセスを許可する．
・TA_MEMINI，TA_MEMPRSVの指定はターゲット非依存部で処理する．
・TA_SDATAの指定は無視する（ショートデータ領域はサポートしない）．
・TA_UNCACHEの指定は無視する．
・TA_IODEVの指定は無視する．

☆例外ハンドラ

MPUに関連する例外が発生した時に呼ばれる例外ハンドラは，以下のとおりである．

・メモリ保護違反例外ハンドラ
  void target_mpu_exc_handler(void *p_excinf);

また，タスク例外呼出し，または，リターン時に呼ばれる，エミュレートされた
例外ハンドラと使用する例外番号は，以下のとおりである．

・タスク例外実行開始時スタック不正ハンドラ
  void target_emulate_texrtn_handler(void *p_excinf);
  TEXCNO_EMULATE_TEXRTN 20
・タスク例外リターン時スタック不正ハンドラ
  void target_emulate_ret_tex_handler(void *p_excinf);
  TEXCNO_EMULATE_RET_TEX 21

○変更履歴

2012/12/27
・Release 2.1.0対応
・いくつかのバグ修正

2012/05/15
 HRP2カーネルに対応
