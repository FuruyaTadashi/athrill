[DONE> core0 pc=0xd82 main(+0) 0xd82: ADD imm5(-8),r3(117409460):117409452
[DONE> core0 pc=0xd84 main(+2) 0xd84: ST.W r31(0x7f4), disp16(4) r3(0x6ff86ac):0x7f4
[DONE> core0 pc=0xd88 main(+6) 0xd88: ST.W r29(0x0), disp16(0) r3(0x6ff86ac):0x0
[DONE> core0 pc=0xd8c main(+a) 0xd8c: MOV r3(117409452),r29(0)
[DONE> core0 pc=0xd8e main(+c) 0xd8e: MOV imm32(3364),r10(101452):3364
[DONE> core0 pc=0xd94 main(+12) 0xd94: JARL disp22(4):0xd98 r31(0xd98)
[DONE> core0 pc=0xd98 main(+16) 0xd98: ADD imm5(4),r31(3480):3484
[DONE> core0 pc=0xd9a main(+18) 0xd9a: JMP r10(0xd24)
[DONE> core0 pc=0xd24 _ZL11doTestClassv(+0) 0xd24: ADD imm5(-12),r3(117409452):117409440
[DONE> core0 pc=0xd26 _ZL11doTestClassv(+2) 0xd26: ST.W r31(0xd9c), disp16(8) r3(0x6ff86a0):0xd9c
[DONE> core0 pc=0xd2a _ZL11doTestClassv(+6) 0xd2a: ST.W r28(0x0), disp16(4) r3(0x6ff86a0):0x0
[DONE> core0 pc=0xd2e _ZL11doTestClassv(+a) 0xd2e: ST.W r29(0x6ff86ac), disp16(0) r3(0x6ff86a0):0x6ff86ac
[DONE> core0 pc=0xd32 _ZL11doTestClassv(+e) 0xd32: ADD imm5(-4),r3(117409440):117409436
[DONE> core0 pc=0xd34 _ZL11doTestClassv(+10) 0xd34: MOV r3(117409436),r29(117409452)
[DONE> core0 pc=0xd36 _ZL11doTestClassv(+12) 0xd36: MOV imm5(1),r6(0)
[DONE> core0 pc=0xd38 _ZL11doTestClassv(+14) 0xd38: MOV imm32(3732),r10(3364):3732
[DONE> core0 pc=0xd3e _ZL11doTestClassv(+1a) 0xd3e: JARL disp22(4):0xd42 r31(0xd42)
[DONE> core0 pc=0xd42 _ZL11doTestClassv(+1e) 0xd42: ADD imm5(4),r31(3394):3398
[DONE> core0 pc=0xd44 _ZL11doTestClassv(+20) 0xd44: JMP r10(0xe94)
[DONE> core0 pc=0xe94 _Znwj(+0) 0xe94: ADDI imm5(-20),r3(117409436) r3(117409436):117409416
[DONE> core0 pc=0xe98 _Znwj(+4) 0xe98: ST.W r27(0x0), disp16(8) r3(0x6ff8688):0x0
[DONE> core0 pc=0xe9c _Znwj(+8) 0xe9c: ST.W r29(0x6ff869c), disp16(0) r3(0x6ff8688):0x6ff869c
[DONE> core0 pc=0xea0 _Znwj(+c) 0xea0: ST.W r31(0xd46), disp16(16) r3(0x6ff8688):0xd46
[DONE> core0 pc=0xea4 _Znwj(+10) 0xea4: ST.W r26(0x0), disp16(12) r3(0x6ff8688):0x0
[DONE> core0 pc=0xea8 _Znwj(+14) 0xea8: ST.W r28(0x0), disp16(4) r3(0x6ff8688):0x0
[DONE> core0 pc=0xeac _Znwj(+18) 0xeac: MOV r3(117409416),r29(117409436)
[DONE> core0 pc=0xeae _Znwj(+1a) 0xeae: MOV r6(1),r27(0)
[DONE> core0 pc=0xeb0 _Znwj(+1c) 0xeb0: CMP imm5(0),r6(1):1:psw=0x0
[DONE> core0 pc=0xeb2 _Znwj(+1e) 0xeb2: B cond(0xa):0xeb6
[DONE> core0 pc=0xeb6 _Znwj(+22) 0xeb6: MOVHI imm16(1),r0(0) r28(0):65536
[DONE> core0 pc=0xeba _Znwj(+26) 0xeba: MOV r27(1),r6(1)
[DONE> core0 pc=0xebc _Znwj(+28) 0xebc: MOVEA imm16(-2012),r28(65536) r28(65536):63524
[DONE> core0 pc=0xec0 _Znwj(+2c) 0xec0: JARL disp22(4):0xec4 r31(0xec4)
[DONE> core0 pc=0xec4 _Znwj(+30) 0xec4: ADD imm5(4),r31(3780):3784
[DONE> core0 pc=0xec6 _Znwj(+32) 0xec6: JMP r28(0xf824)
[DONE> core0 pc=0xf824 malloc(+0) 0xf824: MOV r6(1),r7(0)
[DONE> core0 pc=0xf826 malloc(+2) 0xf826: LD.W disp16(0),r4(0x0), r6(0x1):0x7d00780
[DONE> core0 pc=0xf82a malloc(+6) 0xf82a: JARL disp22(24806):0x15910 r10(0xf82e)
[DONE> core0 pc=0x15910 _save_r31(+0) 0x15910: ADDI imm5(-4),r3(117409416) r3(117409416):117409412
[DONE> core0 pc=0x15914 _save_r31(+4) 0x15914: ST.W r31(0xec8), disp16(0) r3(0x6ff8684):0xec8
[DONE> core0 pc=0x15918 _save_r31(+8) 0x15918: JMP r10(0xf82e)
[DONE> core0 pc=0xf82e malloc(+a) 0xf82e: JARL disp22(26):0xf848 r31(0xf832)
[DONE> core0 pc=0xf848 _malloc_r(+0) 0xf848: ADDI imm5(-48),r3(117409412) r3(117409412):117409364
[DONE> core0 pc=0xf84c _malloc_r(+4) 0xf84c: ST.W r31(0xf832), disp16(44) r3(0x6ff8654):0xf832
[DONE> core0 pc=0xf850 _malloc_r(+8) 0xf850: ST.W r2(0x0), disp16(40) r3(0x6ff8654):0x0
[DONE> core0 pc=0xf854 _malloc_r(+c) 0xf854: ST.W r20(0x0), disp16(36) r3(0x6ff8654):0x0
[DONE> core0 pc=0xf858 _malloc_r(+10) 0xf858: ST.W r21(0x0), disp16(32) r3(0x6ff8654):0x0
[DONE> core0 pc=0xf85c _malloc_r(+14) 0xf85c: ST.W r22(0x0), disp16(28) r3(0x6ff8654):0x0
[DONE> core0 pc=0xf860 _malloc_r(+18) 0xf860: ST.W r23(0x0), disp16(24) r3(0x6ff8654):0x0
[DONE> core0 pc=0xf864 _malloc_r(+1c) 0xf864: ST.W r24(0x0), disp16(20) r3(0x6ff8654):0x0
[DONE> core0 pc=0xf868 _malloc_r(+20) 0xf868: ST.W r25(0x0), disp16(16) r3(0x6ff8654):0x0
[DONE> core0 pc=0xf86c _malloc_r(+24) 0xf86c: ST.W r26(0x0), disp16(12) r3(0x6ff8654):0x0
[DONE> core0 pc=0xf870 _malloc_r(+28) 0xf870: ST.W r27(0x1), disp16(8) r3(0x6ff8654):0x1
[DONE> core0 pc=0xf874 _malloc_r(+2c) 0xf874: ST.W r28(0xf824), disp16(4) r3(0x6ff8654):0xf824
[DONE> core0 pc=0xf878 _malloc_r(+30) 0xf878: ST.W r29(0x6ff8688), disp16(0) r3(0x6ff8654):0x6ff8688
[DONE> core0 pc=0xf87c _malloc_r(+34) 0xf87c: ADDI imm5(11),r7(1) r10(63534):12
[DONE> core0 pc=0xf880 _malloc_r(+38) 0xf880: MOVEA imm16(22),r0(0) r11(101452):22
[DONE> core0 pc=0xf884 _malloc_r(+3c) 0xf884: CMP r11(22),r10(12):-10:psw=0xa
[DONE> core0 pc=0xf886 _malloc_r(+3e) 0xf886: B cond(0x3):0xf892
[DONE> core0 pc=0xf892 _malloc_r(+4a) 0xf892: MOVEA imm16(16),r0(0) r28(63524):16
[DONE> core0 pc=0xf896 _malloc_r(+4e) 0xf896: CMP r7(1),r28(16):15:psw=0x0
[DONE> core0 pc=0xf898 _malloc_r(+50) 0xf898: B cond(0x9):0xf8a4
[DONE> core0 pc=0xf8a4 _malloc_r(+5c) 0xf8a4: MOV r6(131073920),r27(1)
[DONE> core0 pc=0xf8a6 _malloc_r(+5e) 0xf8a6: JARL disp22(1576):0xfece r31(0xf8aa)
[DONE> core0 pc=0xfece __malloc_lock(+0) 0xfece: JMP r31(0xf8aa)
[DONE> core0 pc=0xf8aa _malloc_r(+62) 0xf8aa: MOVEA imm16(503),r0(0) r10(12):503
[DONE> core0 pc=0xf8ae _malloc_r(+66) 0xf8ae: CMP r10(503),r28(16):-487:psw=0xa
[DONE> core0 pc=0xf8b0 _malloc_r(+68) 0xf8b0: Bcond(0xb):0xf8b2
[DONE> core0 pc=0xf8b2 _malloc_r(+6a) 0xf8b2: MOVHI imm16(1791),r0(0) r11(22):117374976
[DONE> core0 pc=0xf8b6 _malloc_r(+6e) 0xf8b6: MOVEA imm16(29744),r11(117374976) r11(117374976):117404720
[DONE> core0 pc=0xf8ba _malloc_r(+72) 0xf8ba: ADD r28(16),r11(117404720):117404736
[DONE> core0 pc=0xf8bc _malloc_r(+74) 0xf8bc: LD.W disp16(12),r11(0x6ff7440), r29(0x6ff8688):0x6ff7440
[DONE> core0 pc=0xf8c0 _malloc_r(+78) 0xf8c0: MOV r28(16),r10(503)
[DONE> core0 pc=0xf8c2 _malloc_r(+7a) 0xf8c2: SHR imm5(3),r10(16):2
[DONE> core0 pc=0xf8c4 _malloc_r(+7c) 0xf8c4: CMP r11(117404736),r29(117404736):0:psw=0x1
[DONE> core0 pc=0xf8c6 _malloc_r(+7e) 0xf8c6: Bcond(0xa):0xf8c8
[DONE> core0 pc=0xf8c8 _malloc_r(+80) 0xf8c8: ADDI imm5(8),r29(117404736) r11(117404736):117404744
[DONE> core0 pc=0xf8cc _malloc_r(+84) 0xf8cc: LD.W disp16(20),r29(0x6ff7440), r29(0x6ff7440):0x6ff7448
[DONE> core0 pc=0xf8d0 _malloc_r(+88) 0xf8d0: CMP r11(117404744),r29(117404744):0:psw=0x1
[DONE> core0 pc=0xf8d2 _malloc_r(+8a) 0xf8d2: B cond(0x2):0xf8de
[DONE> core0 pc=0xf8de _malloc_r(+96) 0xf8de: ADD imm5(2),r10(2):4
[DONE> core0 pc=0xf8e0 _malloc_r(+98) 0xf8e0: B cond(0x5):0xf99e
[DONE> core0 pc=0xf99e _malloc_r(+156) 0xf99e: MOVHI imm16(1791),r0(0) r12(0):117374976
[DONE> core0 pc=0xf9a2 _malloc_r(+15a) 0xf9a2: MOVEA imm16(29744),r12(117374976) r12(117374976):117404720
[DONE> core0 pc=0xf9a6 _malloc_r(+15e) 0xf9a6: MOVHI imm16(1791),r0(0) r13(0):117374976
[DONE> core0 pc=0xf9aa _malloc_r(+162) 0xf9aa: LD.W disp16(16),r12(0x6ff7430), r29(0x6ff7448):0x6ff7438
[DONE> core0 pc=0xf9ae _malloc_r(+166) 0xf9ae: MOVEA imm16(29752),r13(117374976) r13(117374976):117404728
[DONE> core0 pc=0xf9b2 _malloc_r(+16a) 0xf9b2: MOV r12(117404720),r26(0)
[DONE> core0 pc=0xf9b4 _malloc_r(+16c) 0xf9b4: MOV r13(117404728),r14(0)
[DONE> core0 pc=0xf9b6 _malloc_r(+16e) 0xf9b6: CMP r13(117404728),r29(117404728):0:psw=0x1
[DONE> core0 pc=0xf9b8 _malloc_r(+170) 0xf9b8: Bcond(0xa):0xf9ba
[DONE> core0 pc=0xf9ba _malloc_r(+172) 0xf9ba: JR disp22(338):0xfb0c
[DONE> core0 pc=0xfb0c _malloc_r(+2c4) 0xfb0c: MOV r10(4),r12(117404720)
[DONE> core0 pc=0xfb0e _malloc_r(+2c6) 0xfb0e: SAR imm5(2),r12(4):1
[DONE> core0 pc=0xfb10 _malloc_r(+2c8) 0xfb10: MOV imm5(1),r11(117404744)
[DONE> core0 pc=0xfb12 _malloc_r(+2ca) 0xfb12: SHL r12(1),r11(1):2
[DONE> core0 pc=0xfb16 _malloc_r(+2ce) 0xfb16: LD.W disp16(4),r26(0x6ff7430), r12(0x1):0x0
[DONE> core0 pc=0xfb1a _malloc_r(+2d2) 0xfb1a: CMP r12(0),r11(2):2:psw=0x0
[DONE> core0 pc=0xfb1c _malloc_r(+2d4) 0xfb1c: Bcond(0x3):0xfb1e
[DONE> core0 pc=0xfb1e _malloc_r(+2d6) 0xfb1e: JR disp22(258):0xfc20
[DONE> core0 pc=0xfc20 _malloc_r(+3d8) 0xfc20: LD.W disp16(8),r26(0x6ff7430), r23(0x0):0x6ff7430
[DONE> core0 pc=0xfc24 _malloc_r(+3dc) 0xfc24: MOV imm5(-4),r21(0)
[DONE> core0 pc=0xfc26 _malloc_r(+3de) 0xfc26: LD.W disp16(4),r23(0x6ff7430), r29(0x6ff7438):0x0
[DONE> core0 pc=0xfc2a _malloc_r(+3e2) 0xfc2a: MOVHI imm16(1),r0(0) r24(0):65536
[DONE> core0 pc=0xfc2e _malloc_r(+3e6) 0xfc2e: AND r29(0), r21(-4):0
[DONE> core0 pc=0xfc30 _malloc_r(+3e8) 0xfc30: MOVEA imm16(-304),r24(65536) r24(65536):65232
[DONE> core0 pc=0xfc34 _malloc_r(+3ec) 0xfc34: CMP r28(16),r21(0):-16:psw=0xa
[DONE> core0 pc=0xfc36 _malloc_r(+3ee) 0xfc36: B cond(0x1):0xfc44
[DONE> core0 pc=0xfc44 _malloc_r(+3fc) 0xfc44: MOVHI imm16(1791),r0(0) r11(2):117374976
[DONE> core0 pc=0xfc48 _malloc_r(+400) 0xfc48: MOVHI imm16(1791),r0(0) r10(4):117374976
[DONE> core0 pc=0xfc4c _malloc_r(+404) 0xfc4c: LD.W disp16(31104),r10(0x6ff0000), r10(0x6ff0000):0x0
[DONE> core0 pc=0xfc50 _malloc_r(+408) 0xfc50: LD.W disp16(29736),r11(0x6ff0000), r12(0x0):0xffffffff
[DONE> core0 pc=0xfc54 _malloc_r(+40c) 0xfc54: MOV r23(117404720),r25(0)
[DONE> core0 pc=0xfc56 _malloc_r(+40e) 0xfc56: ADD r21(0),r25(117404720):117404720
[DONE> core0 pc=0xfc58 _malloc_r(+410) 0xfc58: ADD r28(16),r10(0):16
[DONE> core0 pc=0xfc5a _malloc_r(+412) 0xfc5a: MOV r11(117374976),r2(0)
[DONE> core0 pc=0xfc5c _malloc_r(+414) 0xfc5c: CMP imm5(-1),r12(-1):0:psw=0x1
[DONE> core0 pc=0xfc5e _malloc_r(+416) 0xfc5e: Bcond(0xa):0xfc60
[DONE> core0 pc=0xfc60 _malloc_r(+418) 0xfc60: ADDI imm5(16),r10(16) r29(0):32
[DONE> core0 pc=0xfc64 _malloc_r(+41c) 0xfc64: B cond(0x5):0xfc70
[DONE> core0 pc=0xfc70 _malloc_r(+428) 0xfc70: MOVHI imm16(1),r0(0) r20(0):65536
[DONE> core0 pc=0xfc74 _malloc_r(+42c) 0xfc74: MOVEA imm16(1100),r20(65536) r20(65536):66636
[DONE> core0 pc=0xfc78 _malloc_r(+430) 0xfc78: MOV r27(131073920),r6(131073920)
[DONE> core0 pc=0xfc7a _malloc_r(+432) 0xfc7a: MOV r29(32),r7(1)
[DONE> core0 pc=0xfc7c _malloc_r(+434) 0xfc7c: JARL disp22(4):0xfc80 r31(0xfc80)
[DONE> core0 pc=0xfc80 _malloc_r(+438) 0xfc80: ADD imm5(4),r31(64640):64644
[DONE> core0 pc=0xfc82 _malloc_r(+43a) 0xfc82: JMP r20(0x1044c)
[DONE> core0 pc=0x1044c _sbrk_r(+0) 0x1044c: ADD imm5(-12),r3(117409364):117409352
[DONE> core0 pc=0x1044e _sbrk_r(+2) 0x1044e: ST.W r28(0x10), disp16(4) r3(0x6ff8648):0x10
[DONE> core0 pc=0x10452 _sbrk_r(+6) 0x10452: ST.W r29(0x20), disp16(0) r3(0x6ff8648):0x20
[DONE> core0 pc=0x10456 _sbrk_r(+a) 0x10456: MOV r6(131073920),r28(16)
[DONE> core0 pc=0x10458 _sbrk_r(+c) 0x10458: MOVHI imm16(1791),r0(0) r29(32):117374976
[DONE> core0 pc=0x1045c _sbrk_r(+10) 0x1045c: MOV r7(32),r6(131073920)
[DONE> core0 pc=0x1045e _sbrk_r(+12) 0x1045e: ST.W r31(0xfc84), disp16(8) r3(0x6ff8648):0xfc84
[DONE> core0 pc=0x10462 _sbrk_r(+16) 0x10462: ST.W r0(0x0), disp16(31128) r29(0x6ff0000):0x0
[DONE> core0 pc=0x10466 _sbrk_r(+1a) 0x10466: JARL disp22(16638):0x14564 r31(0x1046a)
[DONE> core0 pc=0x14564 _sbrk(+0) 0x14564: ADDI imm5(-20),r3(117409352) r3(117409352):117409332
[DONE> core0 pc=0x14568 _sbrk(+4) 0x14568: MOV imm5(0),r10(16)
[DONE> core0 pc=0x1456a _sbrk(+6) 0x1456a: ADD r3(117409332),r10(0):117409332
[DONE> core0 pc=0x1456c _sbrk(+8) 0x1456c: ST.W r29(0x6ff0000), disp16(4) r3(0x6ff8634):0x6ff0000
[DONE> core0 pc=0x14570 _sbrk(+c) 0x14570: MOVHI imm16(1791),r0(0) r29(117374976):117374976
[DONE> core0 pc=0x14574 _sbrk(+10) 0x14574: ST.W r10(0x6ff8634), disp16(0) r3(0x6ff8634):0x6ff8634
[DONE> core0 pc=0x14578 _sbrk(+14) 0x14578: LD.W disp16(31120),r29(0x6ff0000), r10(0x6ff8634):0x0
[DONE> core0 pc=0x1457c _sbrk(+18) 0x1457c: ST.W r28(0x7d00780), disp16(8) r3(0x6ff8634):0x7d00780
[DONE> core0 pc=0x14580 _sbrk(+1c) 0x14580: ST.W r31(0x1046a), disp16(16) r3(0x6ff8634):0x1046a
[DONE> core0 pc=0x14584 _sbrk(+20) 0x14584: ST.W r27(0x7d00780), disp16(12) r3(0x6ff8634):0x7d00780
[DONE> core0 pc=0x14588 _sbrk(+24) 0x14588: MOV r6(32),r28(131073920)
[DONE> core0 pc=0x1458a _sbrk(+26) 0x1458a: CMP imm5(0),r10(0):0:psw=0x1
[DONE> core0 pc=0x1458c _sbrk(+28) 0x1458c: Bcond(0xa):0x1458e
[DONE> core0 pc=0x1458e _sbrk(+2a) 0x1458e: MOVHI imm16(1792),r0(0) r10(0):117440512
[DONE> core0 pc=0x14592 _sbrk(+2e) 0x14592: MOVEA imm16(-31052),r10(117440512) r10(117440512):117409460
[DONE> core0 pc=0x14596 _sbrk(+32) 0x14596: ST.W r10(0x6ff86b4), disp16(31120) r29(0x6ff0000):0x6ff86b4
[DONE> core0 pc=0x1459a _sbrk(+36) 0x1459a: LD.W disp16(31120),r29(0x6ff0000), r27(0x7d00780):0x6ff86b4
[DONE> core0 pc=0x1459e _sbrk(+3a) 0x1459e: MOV r27(117409460),r11(117374976)
[DONE> core0 pc=0x145a0 _sbrk(+3c) 0x145a0: ADD r28(32),r11(117409460):117409492
[DONE> core0 pc=0x145a2 _sbrk(+3e) 0x145a2: CMP r3(117409332),r11(117409492):160:psw=0x0
[DONE> core0 pc=0x145a4 _sbrk(+40) 0x145a4: Bcond(0x3):0x145a6
[DONE> core0 pc=0x145a6 _sbrk(+42) 0x145a6: MOVHI imm16(2),r0(0) r7(32):131072
[DONE> core0 pc=0x145aa _sbrk(+46) 0x145aa: MOV imm5(1),r6(32)
[DONE> core0 pc=0x145ac _sbrk(+48) 0x145ac: MOVEA imm16(-32744),r7(131072) r7(131072):98328
[DONE> core0 pc=0x145b0 _sbrk(+4c) 0x145b0: MOVEA imm16(25),r0(0) r8(0):25
[DONE> core0 pc=0x145b4 _sbrk(+50) 0x145b4: JARL disp22(3290):0x1528e r31(0x145b8)
[DONE> core0 pc=0x1528e _write(+0) 0x1528e: JARL disp22(1666):0x15910 r10(0x15292)
[DONE> core0 pc=0x15910 _save_r31(+0) 0x15910: ADDI imm5(-4),r3(117409332) r3(117409332):117409328
[DONE> core0 pc=0x15914 _save_r31(+4) 0x15914: ST.W r31(0x145b8), disp16(0) r3(0x6ff8630):0x145b8
[DONE> core0 pc=0x15918 _save_r31(+8) 0x15918: JMP r10(0x15292)
[DONE> core0 pc=0x15292 _write(+4) 0x15292: MOV r6(1),r11(117409492)
[DONE> core0 pc=0x15294 _write(+6) 0x15294: MOV r7(98328),r10(86674)
[DONE> core0 pc=0x15296 _write(+8) 0x15296: MOV r8(25),r9(0)
[DONE> core0 pc=0x15298 _write(+a) 0x15298: MOV imm5(4),r6(1)
[DONE> core0 pc=0x1529a _write(+c) 0x1529a: MOV r11(1),r7(98328)
[DONE> core0 pc=0x1529c _write(+e) 0x1529c: MOV r10(98328),r8(25)
[DONE> core0 pc=0x1529e _write(+10) 0x1529e: JARL disp22(-14064):0x11bae r31(0x152a2)
[DONE> core0 pc=0x11bae null(null) 0x11bae: TRAP vector(0x1f):0x50
[DONE> core0 pc=0x50 null(null) 0x50: JR disp22(2088):0x878
[DONE> core0 pc=0x878 default_int_handler(+0) 0x878: ADD imm5(-4),r3(117409328):117409324
[DONE> core0 pc=0x87a default_int_handler(+2) 0x87a: ST.W r29(0x6ff0000), disp16(0) r3(0x6ff862c):0x6ff0000
[DONE> core0 pc=0x87e default_int_handler(+6) 0x87e: MOV r3(117409324),r29(117374976)
[DONE> core0 pc=0x880 default_int_handler(+8) 0x880: NOP
[DONE> core0 pc=0x882 default_int_handler(+a) 0x882: MOV r29(117409324),r3(117409324)
[DONE> core0 pc=0x884 default_int_handler(+c) 0x884: LD.W disp16(0),r3(0x6ff862c), r29(0x6ff862c):0x6ff0000
[DONE> core0 pc=0x888 default_int_handler(+10) 0x888: ADD imm5(4),r3(117409324):117409328
[DONE> core0 pc=0x88a default_int_handler(+12) 0x88a: JMP r31(0x152a2)
[DONE> core0 pc=0x152a2 _write(+14) 0x152a2: JR disp22(1658):0x1591c
[DONE> core0 pc=0x1591c _return_r31(+0) 0x1591c: LD.W disp16(0),r3(0x6ff8630), r31(0x152a2):0x145b8
[DONE> core0 pc=0x15920 _return_r31(+4) 0x15920: ADDI imm5(4),r3(117409328) r3(117409328):117409332
[DONE> core0 pc=0x15924 _return_r31(+8) 0x15924: JMP r31(0x145b8)
[DONE> core0 pc=0x145b8 _sbrk(+54) 0x145b8: JARL disp22(-21272):0xf2a0 r31(0x145bc)
[DONE> core0 pc=0xf2a0 abort(+0) 0xf2a0: MOV imm5(6),r6(4)
[DONE> core0 pc=0xf2a2 abort(+2) 0xf2a2: JARL disp22(26222):0x15910 r10(0xf2a6)
